<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.gbif.vocabulary.service.persistence.mapper.VocabularyMapper">

  <resultMap id="VOCABULARY_MAP" type="Vocabulary" autoMapping="true">
    <id property="key" column="key"/>
    <result property="label" column="label" typeHandler="ValueByLanguageMapTypeHandler" />
    <result property="definition" column="definition" typeHandler="ValueByLanguageMapTypeHandler" />
    <result property="external_definition_urls" column="externalDefinitions" typeHandler="UriArrayTypeHandler" />
    <result property="editorial_notes" column="editorialNotes" typeHandler="StringArrayTypeHandler" />
  </resultMap>

  <sql id="VOCABULARY_WRITE_FIELDS">
    key, namespace, name, label, definition, external_definition_urls, editorial_notes, created_by, modified_by, created, modified
  </sql>

  <sql id="VOCABULARY_PARAMS_CREATE">
    #{key,jdbcType=INTEGER},
    #{namespace,jdbcType=VARCHAR},
    #{name,jdbcType=VARCHAR},
    #{label,jdbcType=OTHER,typeHandler=ValueByLanguageMapTypeHandler}::hstore,
    #{definition,jdbcType=OTHER,typeHandler=ValueByLanguageMapTypeHandler}::hstore,
    #{externalDefinitions,jdbcType=ARRAY,typeHandler=UriArrayTypeHandler},
    #{editorialNotes,jdbcType=ARRAY,typeHandler=StringArrayTypeHandler},
    #{createdBy,jdbcType=VARCHAR},
    #{modifiedBy,jdbcType=VARCHAR},
    now(), <!-- created -->
    now() <!-- modified -->
  </sql>

  <sql id="VOCABULARY_PARAMS_UPDATE">
    namespace = #{namespace,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    label = #{label,jdbcType=OTHER,typeHandler=ValueByLanguageMapTypeHandler}::hstore,
    definition = #{definition,jdbcType=OTHER,typeHandler=ValueByLanguageMapTypeHandler}::hstore,
    external_definition_urls = #{externalDefinitions,jdbcType=ARRAY,typeHandler=UriArrayTypeHandler},
    editorial_notes = #{editorialNotes,jdbcType=ARRAY,typeHandler=StringArrayTypeHandler},
    created_by = #{createdBy,jdbcType=VARCHAR},
    modified_by = #{modifiedBy,jdbcType=VARCHAR},
    created = now(),
    modified = now(),
    deleted = null <!-- if we're updating it can't be deleted -->
  </sql>

  <sql id="SIMPLE_SEARCH">
    query @@ fulltext_search
  </sql>

  <insert id="create">
    INSERT INTO vocabulary(<include refid="VOCABULARY_WRITE_FIELDS"/>)
    VALUES(<include refid="VOCABULARY_PARAMS_CREATE"/>)
  </insert>

  <update id="update">
    UPDATE vocabulary
    SET <include refid="VOCABULARY_PARAMS_UPDATE" />
    WHERE key = #{key,jdbcType=OTHER}
  </update>

  <update id="delete">
    UPDATE vocabulary
    SET deleted = now()
    WHERE key = #{key,jdbcType=OTHER}
  </update>

  <select id="get" resultMap="VOCABULARY_MAP">
    SELECT *
    FROM vocabulary v
    WHERE v.key = #{key,jdbcType=OTHER}
  </select>

  <select id="list" resultType="Vocabulary" resultMap="VOCABULARY_MAP">
    SELECT *
    FROM vocabulary v
    <if test="query != null" >
      JOIN plainto_tsquery('english',unaccent(#{query})) AS query ON  <include refid="SIMPLE_SEARCH"/>
    </if>
    WHERE v.deleted IS NULL
    <if test="page != null">
      LIMIT #{page.limit} OFFSET #{page.offset}
    </if>
  </select>

  <select id="count" resultType="Long">
    SELECT COUNT(*)
    FROM vocabulary v
    <if test="query != null" >
      JOIN plainto_tsquery('english',unaccent(#{query})) AS query ON  <include refid="SIMPLE_SEARCH"/>
    </if>
    WHERE v.deleted IS NULL
  </select>

  <select id="deleted" resultType="Vocabulary" resultMap="VOCABULARY_MAP">
    SELECT *
    FROM vocabulary v
    WHERE v.deleted IS NOT NULL
    ORDER BY v.created DESC, v.key
    <if test="page != null" >
      LIMIT #{page.limit} OFFSET #{page.offset}
    </if>
  </select>

  <select id="countDeleted" resultType="Long">
    SELECT count(*)
    FROM vocabulary
    WHERE deleted IS NOT NULL
  </select>

  <!-- TODO: suggest -->

</mapper>